{"title":"Redux-Middleware 概念思路理解","date":"2016-07-17T15:02:17.000Z","updated":"2016-07-17T15:02:17.000Z","comments":true,"excerpt":"<h2 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h2><p>中间件这个概念实际上真的不复杂</p>\n<h2 id=\"关于Middleware\"><a href=\"#关于Middleware\" class=\"headerlink\" title=\"关于Middleware\"></a>关于Middleware</h2><blockquote>\n<p>在例如 <code>Express</code> 或者 <code>Koa</code> 框架中，<code>middleware</code> 是指可以被嵌入在框架<strong>接收请求到<br>产生响应过程之中的代码</strong>例如，<code>Express</code> 或者 <code>Koa</code> 的 <code>middleware</code> 可以完<br>成添加 <code>CORS headers</code>、记录日志、内容压缩等工作。<code>middleware</code> 最优秀的<br>特性就是可以被链式组合。</p>\n</blockquote>\n<p>可以理解, <code>middleware</code> 形式如下图:</p>","source":"_posts/Redux-Middleware.md","full_source":"D:\\WebProject\\my-hexo\\source\\_posts\\Redux-Middleware.md","path":"posts/Redux-Middleware/","permalink":"http://yoursite.com/posts/Redux-Middleware/","photos":[],"link":"","tags":[],"categories":[],"post_id":"cjgghugfd0007msxegd2mr716"}