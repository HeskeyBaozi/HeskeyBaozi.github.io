{"total":20,"pageSize":5,"pageCount":4,"data":[{"title":"卡姆依和犬冢的凄美爱情故事","slug":"my-love","date":"2017-12-16T18:24:24.000Z","updated":"2017-12-16T18:30:28.810Z","comments":true,"path":"api/articles/my-love.json","excerpt":"","keywords":null,"cover":"/images/kamuyi.jpg","content":"<p>真的是太甜了。翻译一下：<br><img src=\"/images/kamuyi.jpg\" alt=\"kamuyi\"></p>\n<blockquote>\n<p>I was a shepherd in a past life.<br>我曾是一名牧师</p>\n</blockquote>\n<p>而犬冢则搭话<br><img src=\"/images/quanzhong.jpg\" alt=\"quanzhong\"></p>\n<blockquote>\n<p>And I was a nun at a convent<br>那我我就是一位修道院的修女</p>\n</blockquote>\n<p><del>真是凄美的爱情故事</del></p>\n","text":"真的是太甜了。翻译一下：<br> [Figure] 那我我就是一位修道院的修女真是凄美的爱情故事","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"随笔","slug":"随笔","count":1,"path":"api/tags/随笔.json"}]},{"title":"Redux-Middleware 概念思路理解","slug":"Redux-Middleware","date":"2016-07-17T15:02:17.000Z","updated":"2016-07-17T15:02:17.000Z","comments":true,"path":"api/articles/Redux-Middleware.json","excerpt":"<h2 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h2><p>中间件这个概念实际上真的不复杂</p>\n<h2 id=\"关于Middleware\"><a href=\"#关于Middleware\" class=\"headerlink\" title=\"关于Middleware\"></a>关于Middleware</h2><blockquote>\n<p>在例如 <code>Express</code> 或者 <code>Koa</code> 框架中，<code>middleware</code> 是指可以被嵌入在框架<strong>接收请求到<br>产生响应过程之中的代码</strong>例如，<code>Express</code> 或者 <code>Koa</code> 的 <code>middleware</code> 可以完<br>成添加 <code>CORS headers</code>、记录日志、内容压缩等工作。<code>middleware</code> 最优秀的<br>特性就是可以被链式组合。</p>\n</blockquote>\n<p>可以理解, <code>middleware</code> 形式如下图:</p>\n<p><img src=\"/images/middleware001.jpg\" alt=\"middleware001\"></p>\n<p>主要用途: </p>\n<ul>\n<li>异步的<code>action</code></li>\n<li><code>action</code>过滤</li>\n<li>日志输出</li>\n<li>异常报告</li>\n</ul>","keywords":null,"cover":"/images/middleware001.jpg","content":null,"text":"原因中间件这个概念实际上真的不复杂关于Middleware在例如 Express 或者 Koa 框架中，middleware 是指可以被嵌入在框架接收请求到<br>产生响应过程之中的代码例如，Express 或者 Koa 的 middleware 可以完<br>成添加 CORS ","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"自翻译:创建一个你自己的CSS栅格系统","slug":"CSS-CSS-Grid","date":"2016-04-14T14:01:58.000Z","updated":"2016-04-14T14:01:58.000Z","comments":true,"path":"api/articles/CSS-CSS-Grid.json","excerpt":"<h1 id=\"原文引荐\"><a href=\"#原文引荐\" class=\"headerlink\" title=\"原文引荐\"></a>原文引荐</h1><p>原文为<a href=\"http://j4n.co/blog/Creating-your-own-css-grid-system\" target=\"_blank\" rel=\"noopener\">Creating Your Own CSS Grid System</a>, 原网站来自<a href=\"http://j4n.co/#home\" target=\"_blank\" rel=\"noopener\">Jan Drewniak</a></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>CSS栅格网络(CSS Grids)已经存在一段时间了。这些栅格网络往往和一些像<code>Bootstrap</code>的框架捆绑在一起使用。我并不是一个<code>Bootstrap</code>厌恶者，但是如果你真正的需要只是一个栅格网络的时候，使用一个框架也只是“焉用牛刀”。这里将展示如何从头开始制作一个你自己的CSS栅格网络。</p>\n<h1 id=\"CSS栅格的元素\"><a href=\"#CSS栅格的元素\" class=\"headerlink\" title=\"CSS栅格的元素\"></a>CSS栅格的元素</h1><p><img src=\"http://j4n.co/content/4-blog/10-Creating-your-own-css-grid-system/grid-elements.png\" alt=\"grid-elements\"><br>从图中我们可以看到，一个基本的栅格只包含了一些必要元素。</p>\n<ul>\n<li>一个容器(container)</li>\n<li>行(rows)</li>\n<li>列(columns)</li>\n<li>间隙(gutters)（指的是列与列之间的空隙）</li>\n</ul>","keywords":null,"cover":"http://j4n.co/content/4-blog/10-Creating-your-own-css-grid-system/grid-elements.png","content":null,"text":"原文引荐原文为Creating Your Own CSS Grid System, 原网站来自Jan Drewniak前言CSS栅格网络(CSS Grids)已经存在一段时间了。这些栅格网络往往和一些像Bootstrap的框架捆绑在一起使用。我并不是一个Bootstrap厌恶者，","link":"","raw":null,"photos":[],"categories":[{"name":"HTML/CSS","slug":"HTML-CSS","count":1,"path":"api/categories/HTML-CSS.json"},{"name":"CSS","slug":"HTML-CSS/CSS","count":1,"path":"api/categories/HTML-CSS/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":1,"path":"api/tags/CSS.json"},{"name":"前端","slug":"前端","count":2,"path":"api/tags/前端.json"},{"name":"自翻译","slug":"自翻译","count":1,"path":"api/tags/自翻译.json"},{"name":"Bootstrap","slug":"Bootstrap","count":1,"path":"api/tags/Bootstrap.json"},{"name":"CSS Grid","slug":"CSS-Grid","count":1,"path":"api/tags/CSS-Grid.json"}]},{"title":"“动静结合” 小白初探静态(词法)作用域与执行环境(EC)","slug":"Lang-scope-and-closure","date":"2016-04-07T05:31:32.000Z","updated":"2016-04-07T05:31:32.000Z","comments":true,"path":"api/articles/Lang-scope-and-closure.json","excerpt":"<p>从图书馆翻过各种JS的书之后，对<strong>作用域/执行环境/闭包</strong>这些概念有了一个比较清晰的认识。</p>\n<h1 id=\"栗子说明一切\"><a href=\"#栗子说明一切\" class=\"headerlink\" title=\"栗子说明一切\"></a>栗子说明一切</h1><h2 id=\"第一个栗子\"><a href=\"#第一个栗子\" class=\"headerlink\" title=\"第一个栗子\"></a>第一个栗子</h2><p>来看一个来自<a href=\"http://dmitrysoshnikov.com/ecmascript/javascript-the-core/#execution-context\" target=\"_blank\" rel=\"noopener\">ECMA-262</a>的栗子：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> y = <span class=\"number\">20</span>;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> z = <span class=\"number\">30</span>;</span><br><span class=\"line\">    <span class=\"comment\">// \"x\" and \"y\" are \"free variables\"</span></span><br><span class=\"line\">    <span class=\"comment\">// and are found in the next (after</span></span><br><span class=\"line\">    <span class=\"comment\">// bar's activation object) object</span></span><br><span class=\"line\">    <span class=\"comment\">// of the bar's scope chain</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(x + y + z);</span><br><span class=\"line\">  &#125;)();</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure></p>\n<p>我们可以用下图展现上面的例子(父变量对象存储在函数的<code>Scope</code>属性内)<br><img src=\"http://ww2.sinaimg.cn/large/724c9a82jw1f2qt3du7k5j20650buaa5.jpg\" alt=\"scope-chain.png\"></p>\n<p>首先，可以很容易的理解到一个事实：在从控制台输出<code>x+y+z</code>的时候，<code>x</code>和<code>y</code>是在<code>bar()</code>函数中的作用域链中<code>bar()</code>的活动对象之下找到的。实际上，<code>foo()</code>函数和<code>bar()</code>函数在执行的时候，他们的<code>scope</code>属性就已经确定了，他们的<code>scope</code>属性<strong>确定为他们外层的变量对象(VO)的集合</strong>。从图中可知，内存结构可能是这样的：<br>","keywords":null,"cover":"http://ww2.sinaimg.cn/large/724c9a82jw1f2qt3du7k5j20650buaa5.jpg","content":null,"text":"从图书馆翻过各种JS的书之后，对作用域/执行环境/闭包这些概念有了一个比较清晰的认识。栗子说明一切第一个栗子来看一个来自ECMA-262的栗子：<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>1","link":"","raw":null,"photos":[],"categories":[{"name":"Program Language","slug":"Program-Language","count":1,"path":"api/categories/Program-Language.json"},{"name":"JavaScript","slug":"Program-Language/JavaScript","count":1,"path":"api/categories/Program-Language/JavaScript.json"}],"tags":[{"name":"前端","slug":"前端","count":2,"path":"api/tags/前端.json"},{"name":"JavaScript","slug":"JavaScript","count":1,"path":"api/tags/JavaScript.json"},{"name":"作用域链","slug":"作用域链","count":1,"path":"api/tags/作用域链.json"},{"name":"闭包","slug":"闭包","count":1,"path":"api/tags/闭包.json"}]},{"title":"程序设计Project1 图书管理系统","slug":"Github-BookLib","date":"2016-03-14T02:26:50.000Z","updated":"2016-03-17T09:47:00.000Z","comments":true,"path":"api/articles/Github-BookLib.json","excerpt":"","keywords":null,"cover":null,"content":"<h3 id=\"亲爱的小组伙伴们：\"><a href=\"#亲爱的小组伙伴们：\" class=\"headerlink\" title=\"亲爱的小组伙伴们：\"></a>亲爱的小组伙伴们：</h3><p>我已经把图书管理系统上传到了<code>Github</code>上：<br><a href=\"https://github.com/HeskeyBaozi/BookLib\" target=\"_blank\" rel=\"noopener\">https://github.com/HeskeyBaozi/BookLib</a><br>欢迎提出issues</p>\n","text":"亲爱的小组伙伴们：我已经把图书管理系统上传到了Github上：<br>https://github.com/HeskeyBaozi/BookLib<br>欢迎提出issues","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"Github","slug":"Github","count":1,"path":"api/tags/Github.json"}]}]}